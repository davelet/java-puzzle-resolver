/**
 * 魔方底层还原包，包含了完整的底层还原算法实现。底层还原是魔方复原的第一阶段，按照以下步骤进行：
 *
 * <h2>1. 底层十字（BottomCrossSolver）</h2>
 * 首先在底面（白色）形成一个十字形状。这一步骤通过以下操作完成：
 * <ul>
 *   <li>依次处理四个底层边块</li>
 *   <li>寻找目标白色边块的位置（顶层、中层或底层）</li>
 *   <li>根据边块位置，使用适当的公式将其还原到底层正确位置</li>
 *   <li>确保边块颜色与相邻面中心块颜色匹配</li>
 * </ul>
 *
 * <h2>2. 底层角块（BottomCornerSolver）</h2>
 * 在形成底层十字后，需要将四个底层角块放置到正确位置：
 * <ul>
 *   <li>依次处理四个底层角块</li>
 *   <li>寻找目标白色角块的位置</li>
 *   <li>如果角块在顶层，将其放置到目标位置上方</li>
 *   <li>使用R U R'或U R U' R'公式将角块插入到正确位置</li>
 *   <li>确保角块的三个面与相邻面的颜色都匹配</li>
 * </ul>
 *
 * 通过以上两个步骤的顺序执行，可以完成魔方底层的完整还原。每个步骤都使用特定的公式和策略，
 * 确保能够有效地将底层还原到目标状态。底层的还原为后续的中层和顶层还原奠定基础。
 */
package com.rubik.toll.back.rubik.solver.bottom;